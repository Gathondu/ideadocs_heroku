{"ast":null,"code":"import _defineProperty from \"/Users/JesonLeejunzhen/Ideadocs-API/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/JesonLeejunzhen/Ideadocs-API/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/JesonLeejunzhen/Ideadocs-API/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/JesonLeejunzhen/Ideadocs-API/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/JesonLeejunzhen/Ideadocs-API/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/JesonLeejunzhen/Ideadocs-API/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/JesonLeejunzhen/Ideadocs-API/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/JesonLeejunzhen/Ideadocs-API/client/src/components/IdeasContainer.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Idea from './Idea';\nimport update from 'immutability-helper';\nimport Color from './Color';\nimport { ActionCable } from 'react-actioncable-provider';\n\nvar IdeasContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(IdeasContainer, _Component);\n\n  function IdeasContainer(props) {\n    var _this;\n\n    _classCallCheck(this, IdeasContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(IdeasContainer).call(this, props));\n    _this.state = {\n      ideas: [],\n      editingIdeaID: null,\n      editingTitleID: null,\n      notification: '',\n      selected: null,\n      color: \" \",\n      displayColorPicker: false\n    };\n\n    _this.addNewIdea = function () {\n      axios.post('api/v1/ideas', {\n        idea: {\n          title: '',\n          body: '',\n          color: ''\n        }\n      }).then(function (response) {\n        var ideas = update(_this.state.ideas, {\n          $push: [response.data]\n        });\n\n        _this.setState({\n          ideas: ideas,\n          editingIdeaID: response.data.id\n        });\n      }).catch(function (error) {\n        return console.log(error);\n      });\n    };\n\n    _this.updateIdea = function (idea) {\n      var ideaIndex = _this.state.ideas.findIndex(function (x) {\n        return x.id === idea.id;\n      });\n\n      var ideas = update(_this.state.ideas, _defineProperty({}, ideaIndex, {\n        $set: idea\n      }));\n\n      _this.setState({\n        ideas: ideas\n      });\n\n      _this.props.onChange(\"All changes saved\");\n\n      _this.props.setTransitionIn(true);\n\n      _this.sub.send({\n        ideas: idea.target.value,\n        id: idea.id\n      });\n    };\n\n    _this.deleteIdea = function (id) {\n      axios.delete(\"api/v1/ideas/\".concat(id)).then(function (response) {\n        var ideaIndex = _this.state.ideas.findIndex(function (x) {\n          return x.id === id;\n        });\n\n        var ideas = update(_this.state.ideas, {\n          $splice: [[ideaIndex, 1]]\n        });\n\n        _this.setState({\n          ideas: ideas\n        });\n      }).catch(function (error) {\n        return console.log(error);\n      });\n    };\n\n    _this.enableEditing = function (id) {\n      _this.setState({\n        editingIdeaID: id\n      }, function () {\n        _this.title.focus();\n      });\n    };\n\n    _this.handleClick = function () {\n      _this.setState({\n        displayColorPicker: !_this.state.displayColorPicker\n      });\n    };\n\n    _this.handleEditing = function (id) {\n      _this.setState({\n        editingTitleID: id\n      });\n    };\n\n    _this.closeBox = function () {\n      setTimeout(function () {\n        _this.setState({\n          displayColorPicker: false\n        });\n      }, 200);\n    };\n\n    _this.changeColor = function (color) {\n      _this.setState({\n        color: color\n      });\n    };\n\n    _this.handleChangeStateColor = function (color) {\n      console.log(color);\n    };\n\n    _this.references = new Map();\n    _this.selected = _this.selected.bind(_assertThisInitialized(_assertThisInitialized(_this))); // this.handleReceivedIdeaEvent = this.handleReceivedIdeaEvent.bind(this)\n\n    return _this;\n  }\n\n  _createClass(IdeasContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get('api/v1/ideas.json').then(function (response) {\n        _this2.setState({\n          ideas: response.data\n        });\n      }).catch(function (error) {\n        return console.log(error);\n      });\n    } //  handleReceivedIdeaEvent = ({ event, idea }) => {\n    //   switch(event) {\n    //     case 'created':\n    //       this.setState(prevState => {\n    //         const currentIds = prevState.ideas.map(i => i.id)\n    //         const isIdeaNotRendered = !currentIds.includes(idea.id)\n    //         if (isIdeaNotRendered) {\n    //           const ideas = update(this.state.ideas, {$push: [idea]})\n    //           this.setState({ideas})\n    //         }\n    //       })\n    //       break\n    //     case 'updated':\n    //       this.setState(prevState => {\n    //         const index = prevState.ideas.map(i => i.id).indexOf(idea.id)\n    //         const ideas = update(prevState.ideas, {[index]: {$set: idea}})\n    //         return { ideas }\n    //       })\n    //       break\n    //     case 'deleted':\n    //       this.setState(prevState => {\n    //         const ideas = prevState.ideas.filter((item) => {\n    //           if (item.id !== idea.id) {\n    //             return item\n    //           }\n    //         })\n    //         return { ideas }\n    //       })\n    //       break\n    //     default:\n    //       console.warn(\"Unhandled event type\")\n    //   }\n    // }\n\n  }, {\n    key: \"selected\",\n    value: function selected(e) {\n      var selectedRef = this.references.get(e);\n      this.setState({\n        selected: selectedRef,\n        displayColorPicker: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var ideas = this.state.ideas.map(function (idea) {\n        return React.createElement(Idea, {\n          color: _this3.state.color,\n          closeBox: _this3.closeBox,\n          className: \"tile\",\n          idea: idea,\n          key: \"\".concat(idea.id, \"-\").concat(idea.updated_at),\n          handleChangeStateColor: _this3.handleChangeStateColor,\n          updateIdea: _this3.updateIdea,\n          titleRef: function titleRef(input) {\n            return _this3.title = input;\n          },\n          resetNotification: _this3.props.resetNotification,\n          onDelete: _this3.deleteIdea,\n          onChangeComplete: _this3.handleChangeComplete,\n          ref: function ref(c) {\n            return _this3.references.set(idea.id, c);\n          },\n          onClick: function onClick() {\n            _this3.enableEditing && _this3.selected(idea.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        });\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"main-div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"board-title\",\n        onClick: this.handleEditing,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"newideabtn-div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"color-div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        onClick: this.handleUnselect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }), React.createElement(Color, {\n        changeColor: this.changeColor,\n        className: \"color-div\",\n        selected: this.state.selected,\n        color: this.state.color,\n        displayColorPicker: this.state.displayColorPicker,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"pretty-div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, ideas), React.createElement(\"button\", {\n        className: \"newIdeaButton\",\n        onClick: this.addNewIdea,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"+\"));\n    }\n  }]);\n\n  return IdeasContainer;\n}(Component);\n\nexport default IdeasContainer;","map":{"version":3,"sources":["/Users/JesonLeejunzhen/Ideadocs-API/client/src/components/IdeasContainer.js"],"names":["React","Component","axios","Idea","update","Color","ActionCable","IdeasContainer","props","state","ideas","editingIdeaID","editingTitleID","notification","selected","color","displayColorPicker","addNewIdea","post","idea","title","body","then","response","$push","data","setState","id","catch","error","console","log","updateIdea","ideaIndex","findIndex","x","$set","onChange","setTransitionIn","sub","send","target","value","deleteIdea","delete","$splice","enableEditing","focus","handleClick","handleEditing","closeBox","setTimeout","changeColor","handleChangeStateColor","references","Map","bind","get","e","selectedRef","map","updated_at","input","resetNotification","handleChangeComplete","c","set","handleUnselect"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\nimport Idea from './Idea'\nimport update from 'immutability-helper'\nimport Color from './Color'\nimport { ActionCable } from 'react-actioncable-provider'\n\nclass IdeasContainer extends Component {\n  state =  {\n    ideas: [] ,\n    editingIdeaID: null,\n    editingTitleID: null,\n    notification: '',\n    selected: null,\n    color: \" \",\n    displayColorPicker: false\n  }\n\n  constructor(props) {\n    super(props)\n    this.references = new Map()\n    this.selected = this.selected.bind(this)\n    // this.handleReceivedIdeaEvent = this.handleReceivedIdeaEvent.bind(this)\n  }\n\n  componentDidMount() {\n   axios.get('api/v1/ideas.json')\n    .then(response => { this.setState({ ideas: response.data }) })\n    .catch(error => console.log(error))\n  }\n\n  //  handleReceivedIdeaEvent = ({ event, idea }) => {\n  //   switch(event) {\n  //     case 'created':\n  //       this.setState(prevState => {\n  //         const currentIds = prevState.ideas.map(i => i.id)\n  //         const isIdeaNotRendered = !currentIds.includes(idea.id)\n\n  //         if (isIdeaNotRendered) {\n  //           const ideas = update(this.state.ideas, {$push: [idea]})\n  //           this.setState({ideas})\n  //         }\n  //       })\n  //       break\n  //     case 'updated':\n  //       this.setState(prevState => {\n  //         const index = prevState.ideas.map(i => i.id).indexOf(idea.id)\n  //         const ideas = update(prevState.ideas, {[index]: {$set: idea}})\n  //         return { ideas }\n  //       })\n  //       break\n  //     case 'deleted':\n  //       this.setState(prevState => {\n  //         const ideas = prevState.ideas.filter((item) => {\n  //           if (item.id !== idea.id) {\n  //             return item\n  //           }\n  //         })\n\n  //         return { ideas }\n  //       })\n  //       break\n  //     default:\n  //       console.warn(\"Unhandled event type\")\n  //   }\n  // }\n\n  addNewIdea = () => {\n    axios.post(\n      'api/v1/ideas',\n      {\n        idea: {\n          title: '',\n          body: '',\n          color: ''\n        }\n      }\n    )\n    .then(response => {\n      const ideas = update(this.state.ideas, {$push: [response.data]})\n      this.setState({ideas: ideas, editingIdeaID: response.data.id})\n    })\n    .catch(error => console.log(error))\n  }\n\n  updateIdea = (idea) => {\n    const ideaIndex = this.state.ideas.findIndex(x => x.id === idea.id)\n    const ideas = update(this.state.ideas, {[ideaIndex]: {$set:idea}})\n    this.setState({ideas: ideas})\n\n    this.props.onChange(\"All changes saved\");\n    this.props.setTransitionIn(true)\n    this.sub.send({ ideas: idea.target.value, id: idea.id})\n  }\n\n  deleteIdea = (id) => {\n    axios.delete(`api/v1/ideas/${id}`)\n    .then(response => {\n      const ideaIndex = this.state.ideas.findIndex(x => x.id === id)\n      const ideas = update(this.state.ideas, { $splice: [[ideaIndex, 1]]})\n      this.setState({ideas: ideas})\n    })\n    .catch(error => console.log(error))\n  }\n\n  enableEditing = (id) => {\n    this.setState({editingIdeaID: id}, () => {this.title.focus() })\n  }\n\n  // color\n\n  handleClick = () => {\n    this.setState({ displayColorPicker: !this.state.displayColorPicker })\n  };\n\n  selected(e) {\n    let selectedRef = this.references.get(e)\n    this.setState({ selected: selectedRef, displayColorPicker: true })\n  }\n\n  handleEditing = (id) => {\n    this.setState({editingTitleID: id})\n  }\n\n  closeBox = () => {\n    setTimeout(() => {\n      this.setState({ displayColorPicker: false })\n    }, 200);\n  }\n  changeColor = (color) => {\n    this.setState({color});\n  }\n\n  handleChangeStateColor = (color) => {\n    console.log(color)\n  }\n\n  render() {\n    const ideas = this.state.ideas.map((idea) => {\n      return(\n        <Idea\n          color={this.state.color}\n          closeBox={ this.closeBox }\n          className=\"tile\"\n          idea={idea}\n          key={`${idea.id}-${idea.updated_at}`}\n          handleChangeStateColor={this.handleChangeStateColor}\n          updateIdea={this.updateIdea}\n          titleRef = {input => this.title = input}\n          resetNotification={this.props.resetNotification}\n          onDelete={this.deleteIdea}\n          onChangeComplete={ this.handleChangeComplete }\n          ref = {c => this.references.set(idea.id, c)}\n          onClick={() => {this.enableEditing && this.selected(idea.id)}}\n        />\n      )\n    })\n\n    return (\n      <div>\n      \n\n        <div className=\"main-div\">\n          <div className=\"board-title\" onClick={this.handleEditing}>\n          </div>\n          <div className=\"newideabtn-div\">\n          </div>\n          <div className=\"color-div\">\n            <div onClick={ this.handleUnselect }/>\n            <Color\n              changeColor={this.changeColor}\n              className=\"color-div\"\n              selected={this.state.selected}\n              color={this.state.color}\n              displayColorPicker={this.state.displayColorPicker}\n            />\n          </div>\n\n          <div className=\"pretty-div\"></div>\n        </div>\n\n        <div>\n          {ideas}\n        </div>\n\n        <button className= \"newIdeaButton\" onClick={this.addNewIdea}>+</button>\n      </div>\n    )\n  }\n}\n\nexport default IdeasContainer\n"]},"metadata":{},"sourceType":"module"}