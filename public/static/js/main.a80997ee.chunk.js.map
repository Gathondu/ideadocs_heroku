{"version":3,"sources":["components/Idea.js","components/Color.js","components/IdeasContainer.js","components/BoardTitle.js","components/Notification.js","App.js","serviceWorker.js","index.js"],"names":["Idea","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInput","e","resetNotification","setState","defineProperty","target","name","value","handleChangeColor","axios","put","concat","idea","id","title","state","body","color","then","response","updateIdea","data","handleChangeStateColor","catch","error","console","log","closeBox","handleDelete","onDelete","handleClick","onClick","changeBackground","bind","assertThisInitialized","prevProps","react_default","a","createElement","className","style","background","onBlur","fontSize","fontWeight","type","placeholder","onChange","ref","titleRef","handleColor","Component","Color","handleChangeComplete","selected","hex","changeColor","hidden","display","displayColorPicker","lib","onChangeComplete","React","IdeasContainer","ideas","editingIdeaID","editingTitleID","notification","addNewIdea","post","update","$push","ideaIndex","findIndex","x","$set","setTransitionIn","sub","send","deleteIdea","delete","$splice","enableEditing","focus","handleEditing","setTimeout","references","Map","_this2","get","selectedRef","_this3","map","components_Idea","key","updated_at","input","c","set","handleUnselect","components_Color","BoardTitle","editTitle","editMode","unFocus","board","boardtitle","res","handleKey","boards","defaultValue","onKeyDown","width","height","changeTitle","align","defaultStyle","transition","opacity","padding","transitionStyles","entering","entered","Notification","_ref","inProp","in","Transition_default","timeout","transitionState","objectSpread","App","transisitonIn","setNotification","TrasitionIn","Navbar","expand","variant","bg","Container","Brand","href","components_Notification","components_BoardTitle","components_IdeasContainer","Boolean","window","location","hostname","match","API_WS_ROOT","ReactDOM","render","react_actioncable_provider_lib","url","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a80997ee.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\n\n\nclass Idea extends Component {\n\tconstructor(props) {\n  \tsuper(props)\n  \tthis.state = {\n    \ttitle:this.props.idea.title,\n    \tbody: this.props.idea.body,\n    \tcolor: this.props.idea.color\n    }\n    this.changeBackground = this.changeBackground.bind(this)\n  }\n\n  changeBackground(color) {\n    this.setState({color})\n  }\n\n  handleInput = (e) => {\n  \tthis.props.resetNotification()\n  \tthis.setState({[e.target.name]: e.target.value})\n  }\n\n  componentDidUpdate(prevProps) {\n  \tif(prevProps.color !== this.props.color) {\n  \t\tthis.handleChangeColor()\n  \t}\n  }\n\n  handleChangeColor = () => {\n    axios.put(\n      `api/v1/ideas/${this.props.idea.id}`,\n      {\n        idea: {\n          title: this.state.title,\n          body: this.state.body,\n          color: this.state.color\n        }\n      }\n    )\n    .then(response => {\n      this.props.updateIdea(response.data)\n      this.props.handleChangeStateColor(this.state.color)\n    })\n    .catch(error => console.log(error))\n    this.props.closeBox()\n  }\n\n  handleDelete = () => {this.props.onDelete(this.props.idea.id)}\n\n  handleClick = () => {this.props.onClick(this.props.idea.id)}\n\n  render () {\n  \treturn(\n  \t\t<div className=\"tile\" onClick={this.props.onClick} style={{background: this.state.color}}>\n  \t\t  <span className=\"deleteButton\" onClick={this.handleDelete}> x </span>\n  \t\t\t<form onBlur={this.handleChangeColor}>\n    \t\t\t<input style={{fontSize: \"16px\", fontWeight: \"bold\"}} className='input' type=\"text\" name=\"title\" placeholder='Enter a Title'\n    \t\t\tvalue={this.state.title} onChange={this.handleInput}\n    \t\t\tref={this.props.titleRef} onClick={this.handleColor && this.handleClick} />\n\n    \t\t\t<textarea style={{fontSize: \"14px\"}}className='input' name=\"body\" placeholder='Describe your idea'\n    \t\t\tvalue={this.state.body} onChange={this.handleInput} onClick={this.handleClick} > </textarea>\n  \t\t  </form>\n  \t\t</div>\n  \t)\n  }\n}\n\nexport default Idea\n","import React from 'react';\nimport { TwitterPicker } from 'react-color';\n\nclass Color extends React.Component {\n  state = {\n    color: ''\n  };\n\n  handleChangeComplete = (color) => {\n    if (this.props.selected) {\n      // console.log('this.selected.changeBackground ', this.props.selected);\n      this.props.selected.changeBackground(color.hex);\n    }\n    this.setState({ background: color.hex });\n    this.props.changeColor(color.hex)\n  };\n\n render() {\n    return (\n      <div hidden={ this.props.selected === null ? true : false }>\n        <div style={{ display: (this.props.displayColorPicker ? 'block' : 'none') }}>\n          <TwitterPicker\n            className= \"colorpicker\"\n            color={ this.state.color}\n            onChangeComplete={ this.handleChangeComplete }\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Color\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport Idea from './Idea'\nimport update from 'immutability-helper'\nimport Color from './Color'\nimport { ActionCable } from 'react-actioncable-provider'\n\nclass IdeasContainer extends Component {\n  state =  {\n    ideas: [] ,\n    editingIdeaID: null,\n    editingTitleID: null,\n    notification: '',\n    selected: null,\n    color: \" \",\n    displayColorPicker: false\n  }\n\n  constructor(props) {\n    super(props)\n    this.references = new Map()\n    this.selected = this.selected.bind(this)\n    // this.handleReceivedIdeaEvent = this.handleReceivedIdeaEvent.bind(this)\n  }\n\n  componentDidMount() {\n   axios.get('api/v1/ideas.json')\n    .then(response => { this.setState({ ideas: response.data }) })\n    .catch(error => console.log(error))\n  }\n\n  //  handleReceivedIdeaEvent = ({ event, idea }) => {\n  //   switch(event) {\n  //     case 'created':\n  //       this.setState(prevState => {\n  //         const currentIds = prevState.ideas.map(i => i.id)\n  //         const isIdeaNotRendered = !currentIds.includes(idea.id)\n\n  //         if (isIdeaNotRendered) {\n  //           const ideas = update(this.state.ideas, {$push: [idea]})\n  //           this.setState({ideas})\n  //         }\n  //       })\n  //       break\n  //     case 'updated':\n  //       this.setState(prevState => {\n  //         const index = prevState.ideas.map(i => i.id).indexOf(idea.id)\n  //         const ideas = update(prevState.ideas, {[index]: {$set: idea}})\n  //         return { ideas }\n  //       })\n  //       break\n  //     case 'deleted':\n  //       this.setState(prevState => {\n  //         const ideas = prevState.ideas.filter((item) => {\n  //           if (item.id !== idea.id) {\n  //             return item\n  //           }\n  //         })\n\n  //         return { ideas }\n  //       })\n  //       break\n  //     default:\n  //       console.warn(\"Unhandled event type\")\n  //   }\n  // }\n\n  addNewIdea = () => {\n    axios.post(\n      'api/v1/ideas',\n      {\n        idea: {\n          title: '',\n          body: '',\n          color: ''\n        }\n      }\n    )\n    .then(response => {\n      const ideas = update(this.state.ideas, {$push: [response.data]})\n      this.setState({ideas: ideas, editingIdeaID: response.data.id})\n    })\n    .catch(error => console.log(error))\n  }\n\n  updateIdea = (idea) => {\n    const ideaIndex = this.state.ideas.findIndex(x => x.id === idea.id)\n    const ideas = update(this.state.ideas, {[ideaIndex]: {$set:idea}})\n    this.setState({ideas: ideas})\n\n    this.props.onChange(\"All changes saved\");\n    this.props.setTransitionIn(true)\n    this.sub.send({ ideas: idea.target.value, id: idea.id})\n  }\n\n  deleteIdea = (id) => {\n    axios.delete(`api/v1/ideas/${id}`)\n    .then(response => {\n      const ideaIndex = this.state.ideas.findIndex(x => x.id === id)\n      const ideas = update(this.state.ideas, { $splice: [[ideaIndex, 1]]})\n      this.setState({ideas: ideas})\n    })\n    .catch(error => console.log(error))\n  }\n\n  enableEditing = (id) => {\n    this.setState({editingIdeaID: id}, () => {this.title.focus() })\n  }\n\n  // color\n\n  handleClick = () => {\n    this.setState({ displayColorPicker: !this.state.displayColorPicker })\n  };\n\n  selected(e) {\n    let selectedRef = this.references.get(e)\n    this.setState({ selected: selectedRef, displayColorPicker: true })\n  }\n\n  handleEditing = (id) => {\n    this.setState({editingTitleID: id})\n  }\n\n  closeBox = () => {\n    setTimeout(() => {\n      this.setState({ displayColorPicker: false })\n    }, 200);\n  }\n  changeColor = (color) => {\n    this.setState({color});\n  }\n\n  handleChangeStateColor = (color) => {\n    console.log(color)\n  }\n\n  render() {\n    const ideas = this.state.ideas.map((idea) => {\n      return(\n        <Idea\n          color={this.state.color}\n          closeBox={ this.closeBox }\n          className=\"tile\"\n          idea={idea}\n          key={`${idea.id}-${idea.updated_at}`}\n          handleChangeStateColor={this.handleChangeStateColor}\n          updateIdea={this.updateIdea}\n          titleRef = {input => this.title = input}\n          resetNotification={this.props.resetNotification}\n          onDelete={this.deleteIdea}\n          onChangeComplete={ this.handleChangeComplete }\n          ref = {c => this.references.set(idea.id, c)}\n          onClick={() => {this.enableEditing && this.selected(idea.id)}}\n        />\n      )\n    })\n\n    return (\n      <div>\n      \n\n        <div className=\"main-div\">\n          <div className=\"board-title\" onClick={this.handleEditing}>\n          </div>\n          <div className=\"newideabtn-div\">\n          </div>\n          <div className=\"color-div\">\n            <div onClick={ this.handleUnselect }/>\n            <Color\n              changeColor={this.changeColor}\n              className=\"color-div\"\n              selected={this.state.selected}\n              color={this.state.color}\n              displayColorPicker={this.state.displayColorPicker}\n            />\n          </div>\n\n          <div className=\"pretty-div\"></div>\n        </div>\n\n        <div>\n          {ideas}\n        </div>\n\n        <button className= \"newIdeaButton\" onClick={this.addNewIdea}>+</button>\n      </div>\n    )\n  }\n}\n\nexport default IdeasContainer\n","import React, { Component } from 'react'\nimport ReactDOM from 'react-dom'\nimport axios from 'axios'\nimport { ActionCable } from 'react-actioncable-provider'\n\n\nclass BoardTitle extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      title: \"\",\n      editMode: false,\n      id: null\n    }\n\n    // this.handleBoardEvents = this.handleBoardEvents.bind(this)\n  }\n\n  componentDidMount() {\n    axios.get('api/v1/boards.json')\n    .then(response => {\n      const title = response.data[0].boardtitle\n\n      this.setState({boards: response.data,\n        title: title === \"\" ? \"DEFAULT TITLE\" : title,\n        id: response.data[0].id\n      })\n    })\n    .catch(error => console.log(error))\n  }\n\n  editTitle = (title) => {\n    this.setState({\n      editMode: !this.state.editMode\n    })\n  }\n\n  unFocus = (e) => {\n    if (e.target.value !== \"\") {\n      this.setState({\n        editMode: false,\n        title: e.target.value\n      })\n    } else {\n      this.setState({\n        editMode: false,\n        title: \"DEFAULT TITLE\"\n      })\n    }\n    axios\n      .put(`api/v1/boards/${this.state.id}`, {board: {boardtitle: e.target.value}})\n      .then( res => {\n    })\n    .catch(error => console.log(error))\n  }\n\n  handleKey = (e) => {\n    if (e.key === 'Enter') {\n      if (e.target.value === \"\") {\n        this.setState({\n          title: \"DEFAULT TITLE\",\n          editMode: false\n        })\n      } else {\n        this.setState({\n          editMode: false,\n          title: e.target.value\n        })\n      }\n\n      axios\n        .put(`api/v1/boards/${this.state.id}`, { board: { boardtitle: e.target.value } })\n        .then( res => {\n          console.log(res);\n          console.log(res.data)\n        })\n        .catch(error => console.log(error))\n    }\n  }\n\n  // handleBoardEvents = ({event, board}) => {\n  //   switch(event) {\n  //     case 'updated':\n  //       this.setState({title: board.boardtitle})\n  //       break\n  //     default:\n  //       console.warn(\"Unhandled event type\")\n  //   }\n  // }\n\n\n\n  render(){\n    return(\n      <div className=\"title\">\n       \n        {\n          this.state.editMode ?\n          <input defaultValue={this.state.title} onBlur={this.unFocus} onKeyDown={this.handleKey} style={{width:\"100%\", height:\"30px\", fontSize:\"30px\"}}  onClick={this.changeTitle}/>\n          :\n          <div className = \"titlediv\" align=\"center\">\n          <h1 className=\"boardtitle\" onClick={this.editTitle}>{this.state.title}</h1>\n          </div>\n        }\n      </div>\n\n    );\n  }\n}\n\nexport default BoardTitle\n","import React from 'react'\nimport Transition from 'react-transition-group/Transition'\n\nconst duration = 1000\n\nconst defaultStyle = {\n  transition: `background ${duration}ms ease-in-out, opacity ${duration}ms ease-in-out`,\n  opacity: 0,\n  padding: '10px'\n}\n\nconst transitionStyles = {\n  entering: { opacity: 1, background: 'lightgreen' },\n  entered:  { opacity: 1 },\n}\n\n\n\nconst Notification = ({ in: inProp, notification }) =>\n  <Transition in={inProp} timeout={duration}>\n    {(transitionState) => {\n      return(\n        <span style={{\n          ...defaultStyle,\n          ...transitionStyles[transitionState]\n        }}>\n          {notification}\n        </span>\n      )\n\n    }}\n  </Transition>\n\nexport default Notification","import React, { Component } from 'react'\nimport './App.css'\nimport IdeasContainer from './components/IdeasContainer'\nimport {Navbar, Container} from 'react-bootstrap'\nimport BoardTitle from './components/BoardTitle'\nimport Notification from './components/Notification'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      TrasitionIn: false,\n      notification: ''\n    }\n    this.setTransitionIn = this.setTransitionIn.bind(this)\n    this.setNotification = this.setNotification.bind(this)\n  }\n\n  setTransitionIn = (e) => {\n    this.setState({transisitonIn: e})\n  }\n\n   resetNotification = () => { \n    this.setTransitionIn(false)\n    this.setState({notification: ''})\n  }\n\n  setNotification = (notification) => {\n    this.setState({ notification })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Navbar expand=\"lg\" variant=\"light\" bg=\"light\">\n          <Container>\n            <Navbar.Brand href=\"/\" className=\"navbar\">IDEADOCS</Navbar.Brand>\n\n            <div className=\"notification\">\n              <Notification in={this.state.transisitonIn} notification={this.state.notification} />\n            </div>\n          </Container>\n        </Navbar>\n\n        <div className=\"title-container\">\n        </div>\n\n        <BoardTitle />\n\n        <div className=\"App-header\">\n        </div>\n\n        <IdeasContainer\n          onChange={this.setNotification}\n          setTransitionIn={this.setTransitionIn}\n          resetNotification={this.resetNotification}\n        />\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { ActionCableProvider } from 'react-actioncable-provider'\n\nconst API_WS_ROOT = `ws://${window.location.hostname}:3001/cable`\n\nReactDOM.render(\n  <ActionCableProvider url={API_WS_ROOT}>\n    <App />\n  </ActionCableProvider>,\n  document.getElementById('root')\n)\n\nserviceWorker.unregister();"],"sourceRoot":""}